{"version":3,"sources":["assets/login_illustration.jpg","assets/empty_illustration.jpg","assets/logo.jpg","components/Login.js","components/Task.js","components/Tasks.js","components/Addtask.js","components/Submission.js","components/submissions.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Login","useState","email","setEmail","password","setPassword","ltype","setLtype","userContext","useContext","contextUserContext","className","src","require","alt","action","type","placeholder","value","onChange","e","target","onClick","preventDefault","alert","length","setUser","split","Task","props","imgSrc","title","desc","show","to","pathname","state","ArrowRightRounded","Tasks","tasks","searchText","setSearchText","console","log","style","color","fontSize","filter","task","match","RegExp","map","key","id","Addtask","toggle","addTask","setImgSrc","setTitle","setDesc","accept","display","files","reader","FileReader","readAsDataURL","onload","result","htmlFor","CloudUploadRounded","marginLeft","rows","justifyContent","width","CloseRounded","Date","now","AddRounded","Submission","username","score","updateSubmissions","fontStyle","editedScore","prompt","Number","EditRounded","Submissions","location","submissions","setSubmissions","index","data","newSubmissions","marginRight","ArrowBack","marginTop","submission","React","createContext","App","user","setTasks","setToggle","useEffect","window","onscroll","scrollY","document","querySelector","classList","add","remove","Provider","path","exact","component","Boolean","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2fdab481.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/login_illustration.f4eb7876.jpg\";","module.exports = __webpack_public_path__ + \"static/media/empty_illustration.cfe07be3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.bcc71b22.jpg\";","import React, { useContext, useState } from 'react'\r\nimport '../css/login.css'\r\n\r\n//import contexts\r\nimport {contextUserContext} from '../App'\r\n\r\nfunction Login() {\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [ltype, setLtype] = useState(\"Login\")\r\n    const userContext = useContext(contextUserContext)\r\n    return (\r\n        <div className=\"login_con center\">\r\n            <div className=\"login\">\r\n                <img src={require('../assets/login_illustration.jpg')} alt=\"\"/>\r\n                <form action=\"\">\r\n                    <p className=\"form_title\">Instructor {ltype}</p>\r\n                    <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e)=>setEmail(e.target.value)}/>\r\n                    <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e)=>setPassword(e.target.value)}/>\r\n                    <button className=\"button\" type=\"submit\" onClick={(e)=>{\r\n                        e.preventDefault()\r\n                        if(email===\"\" || password===\"\")\r\n                            alert(\"Input fields should not be empty\")\r\n                        else if(password.length<6) alert(\"Password should contain atleast 6 chars\")\r\n                        else userContext.setUser({email: email.split(\"@\")})\r\n                    }}>{ltype}</button>\r\n                    <p className=\"form_control\">\r\n                        {\r\n                            ltype===\"Login\" ? \"Don't have an account?\" : \"Already had an account?\"\r\n                        }\r\n                        \r\n                        <button onClick={(e)=>{\r\n                            e.preventDefault()\r\n                            ltype===\"Login\" ? setLtype(\"Register\") : setLtype(\"Login\")\r\n                        }}>{ltype===\"Login\" ? \"Register\" : \"Login\"}</button>\r\n                    </p>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import { ArrowRightRounded } from '@material-ui/icons'\r\nimport React from 'react'\r\nimport '../css/task.css'\r\nimport {Link} from 'react-router-dom'\r\nfunction Task(props) {\r\n    return (\r\n        <div className=\"task\">\r\n            <img src={props.imgSrc} alt=\"\"/>\r\n            <div className=\"task_info\">\r\n                <p className=\"task_title\">{props.title}</p>\r\n                <p className=\"task_desc\">{props.desc}</p>\r\n                {\r\n                    props.show ? \r\n                    <Link to={{pathname: \"/submissions\", state: props}} >\r\n                        <button>submissions <ArrowRightRounded/> </button>\r\n                    </Link>\r\n                    : null\r\n                }\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import React, { useState, useEffect } from 'react'\r\nimport '../css/tasks.css'\r\nimport Task from '../components/Task'\r\n\r\nfunction Tasks({tasks}) {\r\n    const [searchText, setSearchText] = useState(\"\")\r\n    console.log(tasks);\r\n    return (\r\n        <div className=\"tasks\">\r\n            <div className=\"tasks_con\">\r\n                <div className=\"tasks_head center\">\r\n                    <div>\r\n                    <p style={{color: \"white\", fontSize: \"16px\"}}>Tasks you created.</p>\r\n                    <input type=\"text\" placeholder=\"Search tasks\" value={searchText} onChange={(e)=>setSearchText(e.target.value)}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"task_coll\">\r\n                    {\r\n                        tasks.length===0 ? \r\n                        <div className=\"empty\">\r\n                            <p>No tasks yet. Create one...</p>\r\n                            <img src={require('../assets/empty_illustration.jpg')} alt=\"\"/>\r\n                        </div>\r\n                        :\r\n                        tasks.filter(\r\n                            (task)=>task.title.match(RegExp(`^${searchText}`,'i'))\r\n                        ).map(task=> <Task key={task.id} id={task.id} imgSrc={task.imgSrc} title={task.title} desc={task.desc} show={true}/> )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import { AddRounded, CloseRounded, CloudUploadRounded } from '@material-ui/icons'\r\nimport React, { useState } from 'react'\r\nimport '../css/addTask.css'\r\n\r\nfunction Addtask({toggle, addTask}) {\r\n    const [imgSrc, setImgSrc] = useState(\"\")\r\n    const [title, setTitle] = useState(\"\")\r\n    const [desc, setDesc]= useState(\"\")\r\n    return (\r\n        <div className=\"addTask_con center\">\r\n            <div className=\"addTask_form center\">\r\n                <p className=\"title\">Add Task</p>\r\n                <img src={imgSrc} alt=\"\"/>\r\n                <input id=\"selected_img\" type=\"file\" accept=\"image/*\" style={{display: \"none\"}} onChange={(e)=>{\r\n                    if(e.target.files.length>0){\r\n                        const reader = new FileReader()\r\n                        reader.readAsDataURL(e.target.files[0])\r\n                        reader.onload = ()=>{\r\n                            setImgSrc(reader.result)\r\n                        }\r\n                    }\r\n                }}/>\r\n                <label htmlFor=\"selected_img\" className=\"upload_img_butt\">Upload image <CloudUploadRounded style={{marginLeft: \"5px\"}}/> </label>\r\n                <input className=\"inputs\" type=\"text\" placeholder=\"Task title\" value={title} onChange={(e)=>setTitle(e.target.value)}/>\r\n                <textarea className=\"inputs\" rows=\"5\" placeholder=\"Task description\" value={desc} onChange={(e)=>setDesc(e.target.value)}></textarea>\r\n                \r\n                <div className=\"func_butts\" style={{display: \"flex\", justifyContent: \"space-between\", width: \"100%\"}}>\r\n                    <button className=\"func_butt close\" onClick={()=>toggle()}>Close <CloseRounded/> </button>\r\n                    <button className=\"func_butt\" onClick={()=>{\r\n                        if(title!==\"\" && desc!==\"\" && imgSrc!==\"\") {\r\n                            addTask({\r\n                                id: Date.now(),\r\n                                imgSrc: imgSrc,\r\n                                title : title,\r\n                                desc: desc\r\n                            })\r\n                            setImgSrc(\"\")\r\n                            toggle()\r\n                        }\r\n                        else if(imgSrc===\"\") alert(\"Please upload photo.\")\r\n                        else alert(\"Please fill the details.\")\r\n                    }}>Add task <AddRounded/> </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Addtask\r\n","import { EditRounded } from '@material-ui/icons'\r\nimport React from 'react'\r\nimport '../css/submission.css'\r\n\r\nfunction Submission({id, imgSrc, username, score, updateSubmissions}) {\r\n    return (\r\n        <div className=\"submission\">\r\n            <img src={imgSrc} alt=\"\"/>\r\n            <div className=\"submission_info\">\r\n                <div className=\"user_info\">\r\n                    <p style={{fontSize:\"10px\", fontStyle:\"italic\"}}>Submitted by :</p>\r\n                    <p>{username}</p>\r\n                </div>\r\n                <div className=\"score center\">\r\n                    <p style={{color:\"#FF64C1\"}}>Score : <span style={{color:\"#479CFF\"}}>{score}</span> <span style={{color:\"black\"}}>/ 10</span> </p>\r\n                    <button className=\"center\" onClick={()=>{\r\n                        const editedScore = prompt(`Enter score for ${username}`, score)\r\n                        if(editedScore===null){}\r\n                        else if(editedScore.length>0 && (editedScore>=0 && editedScore<=10)){\r\n                            updateSubmissions(\r\n                                id,\r\n                                {\r\n                                    id: id,\r\n                                    username: username,\r\n                                    score: Number(editedScore)\r\n                                }\r\n                            )\r\n                        }\r\n                        else alert(\"Invalid input. Enter a number between 1-10\")\r\n                        \r\n                    }}>Edit <EditRounded style={{fontSize:\"12px\", marginLeft:\"3px\"}}/> </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Submission\r\n","import React, { useState } from 'react'\r\nimport '../css/submissions.css'\r\nimport Task from '../components/Task'\r\nimport Submission from '../components/Submission'\r\nimport {Link} from 'react-router-dom'\r\nimport { ArrowBack } from '@material-ui/icons'\r\n\r\nfunction Submissions(props) {\r\n    const task = props.location.state\r\n    const [submissions, setSubmissions] = useState([\r\n        {\r\n            id: 1,\r\n            username: \"chetan\",\r\n            score: 8\r\n        },\r\n        {\r\n            id: 2,\r\n            username: \"chandra\",\r\n            score: 9\r\n        },\r\n        {\r\n            id: 3,\r\n            username: \"sai\",\r\n            score: 10\r\n        }\r\n    ])\r\n    const [searchText, setSearchText] = useState(\"\")\r\n    const updateSubmissions = (index, data) => {\r\n        const newSubmissions = [...submissions];\r\n        newSubmissions[index-1] = data;\r\n        console.log(newSubmissions);\r\n        setSubmissions(newSubmissions);\r\n      }\r\n      \r\n    return (\r\n        <div className=\"submissions_con center\">\r\n            <div className=\"center sub_related\">\r\n                <div className=\"center\" style={{color: \"white\",justifyContent:\"flex-start\", width:\"100%\"}}>\r\n                    <Link to=\"/\" style={{marginRight: \"15px\"}}>\r\n                        <button className=\"center\"> <ArrowBack style={{fontSize:\"15px\"}}/> Back</button>\r\n                    </Link>\r\n                    <p>Submissions related to <span style={{color: \"rgb(242, 255, 66)\"}}>{task.title}</span></p>\r\n                    \r\n                </div>\r\n                <Task id={task.id} imgSrc={task.imgSrc} title={task.title} desc={task.desc} show={false}/>\r\n            </div>\r\n            <div className=\"center sub_related\" style={{marginTop:0}}>\r\n                <div className=\"center\" style={{color: \"white\", justifyContent:\"space-between\", width:\"100%\"}}>\r\n                    <p style={{color:\"white\", fontSize:\"20px\", }}>Submissions</p>\r\n                    <input type=\"text\" placeholder=\"Search by username\" value={searchText} onChange={(e)=>setSearchText(e.target.value)}/>\r\n                </div>\r\n                \r\n                <div className=\"submissions center\">\r\n                    {\r\n                        submissions.filter(\r\n                            submission => submission.username.match(RegExp(`^${searchText}`,'i'))\r\n                        )\r\n                        .map(submission=>\r\n                            <Submission key={submission.id} \r\n                            id={submission.id} \r\n                            imgSrc={task.imgSrc}\r\n                            username={submission.username} \r\n                            score={submission.score}\r\n                            updateSubmissions={updateSubmissions}\r\n                            />\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Submissions\r\n","import { AddRounded } from '@material-ui/icons';\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Login from './components/Login'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/Addtask'\nimport Submissions from './components/submissions'\nimport {Route, BrowserRouter as Router, Switch} from 'react-router-dom'\n\n//contexts\nexport const contextUserContext = React.createContext()\n\nfunction App() {\n  const [user, setUser] = useState(null)\n  const [tasks, setTasks] = useState([])\n  const [toggle, setToggle] = useState(false)\n  useEffect(()=>{\n    window.onscroll = ()=>{\n      if(user!==null){\n        if (window.scrollY) {\n          document.querySelector(\".head\").classList.add(\"black\")\n        } else {\n          document.querySelector(\".head\").classList.remove(\"black\")\n        }\n      }\n    }\n  },[user])\n  return (\n    <contextUserContext.Provider value={{user: user, setUser: setUser}}>\n      <div className=\"App\">\n        {\n          user===null ? \n          <Login/>\n          : \n          <div>\n            <div className=\"head\">\n              <header>\n                <img src={require('./assets/logo.jpg')} alt=\"\"/>\n                <p className=\"head_line\">Online Image Editing Bootcamp</p>\n              </header>\n              <header>\n                <p className=\"hello\">Hello! <span>{user.email[0]}</span></p>\n                <button className=\"center\" onClick={()=>setToggle(true)}>Create Task <AddRounded/> </button>\n              </header>\n            </div>\n            <Router>\n              <Switch>\n                <Route path=\"/Image-editing-bootcamp/\" exact component={()=><Tasks tasks={tasks}/>}/>\n                <Route path=\"/Image-editing-bootcamp/submissions\" exact component={Submissions}/>\n              </Switch>\n            </Router>\n            \n          </div>\n        }\n        {\n          toggle ? \n            <AddTask toggle={()=>setToggle(false)} addTask={(task)=>setTasks([...tasks,task])}/>\n          : <div></div>\n        }\n        <div className=\"app_layer\"></div>\n        <div className=\"app_layer2\"></div>\n      </div>\n    </contextUserContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}